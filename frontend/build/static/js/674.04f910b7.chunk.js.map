{"version":3,"file":"static/js/674.04f910b7.chunk.js","mappings":"gNASaA,EAAW,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAkDrB,OAlDqBE,EAAAA,EAAAA,GAAAF,EAAA,EAAAG,IAAA,MAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAGtB,SAAAC,IAAA,IAAAC,EAAAN,EAAA,OAAAG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE2D,OADnDJ,EAAaK,KAAKC,SAClBZ,EAAQW,KAAKE,2BAA2BP,GAAWE,EAAAM,OAAA,SAElD,CAAEd,MAAAA,IAAO,wBAAAQ,EAAAO,OAAA,GAAAV,EAAA,UACjB,yBAAAJ,EAAAe,MAAA,KAAAC,UAAA,EARqB,IAQrB,CAAAlB,IAAA,eAAAC,MAAA,eAAAkB,GAAAhB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAe,IAAA,OAAAhB,EAAAA,EAAAA,KAAAI,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAN,OAAA,SACSO,EAAAA,GAAQC,SAASC,gBAAc,wBAAAH,EAAAL,OAAA,GAAAI,EAAA,KACvC,yBAAAD,EAAAF,MAAA,KAAAC,UAAA,EAJA,IAIA,CAAAlB,IAAA,MAAAC,MAAA,eAAAwB,GAAAtB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAqB,EAAUC,GAAmB,IAAAC,EAAA,OAAAxB,EAAAA,EAAAA,KAAAI,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACrBiB,EAAMhB,KAAKkB,2BAA2BH,EAAQ1B,OACpDW,KAAKmB,OAAOH,GAAK,wBAAAC,EAAAb,OAAA,GAAAU,EAAA,UAClB,gBAAAM,GAAA,OAAAP,EAAAR,MAAA,KAAAC,UAAA,EALA,IAKA,CAAAlB,IAAA,SAAAC,MAED,WACE,MAAwB,qBAAbgC,UACFA,SAASC,KAAKC,MAAMC,sBAEtB,MACT,GAAC,CAAApC,IAAA,SAAAC,MAED,SAAOA,GACmB,qBAAbgC,WACTA,SAASC,KAAKC,MAAMC,qBAAuBnC,EAE/C,GAAC,CAAAD,IAAA,6BAAAC,MAED,SAA2BM,GACzB,IAAM8B,EAAIxC,EAAYyC,gBAAgBC,KAAKhC,GAE3C,IAAK8B,EACH,OAAO,EAGT,IAAMG,EAASC,OAAOC,SAASL,EAAE,GAAI,IAErC,OAAII,OAAOE,MAAMH,GACR,EAGFA,EAAS,GAClB,GAAC,CAAAxC,IAAA,6BAAAC,MAED,SAA2B2B,GACzB,MAAO,GAAPgB,OAAUC,KAAKC,MAAY,IAANlB,GAAU,IACjC,KAAC/B,CAAA,CAlDqB,GACNA,EAAAyC,gBAAkB,Q","sources":["../node_modules/@capacitor/text-zoom/src/ios.ts"],"sourcesContent":["import { Plugins } from '@capacitor/core';\n\nimport type {\n  GetPreferredResult,\n  GetResult,\n  SetOptions,\n  TextZoomPlugin,\n} from './definitions';\n\nexport class TextZoomIOS implements TextZoomPlugin {\n  static readonly TEXT_SIZE_REGEX = /(\\d+)%/;\n\n  async get(): Promise<GetResult> {\n    const percentage = this.getRaw();\n    const value = this.textSizePercentageToNumber(percentage);\n\n    return { value };\n  }\n\n  async getPreferred(): Promise<GetPreferredResult> {\n    return Plugins.TextZoom.getPreferred();\n  }\n\n  async set(options: SetOptions): Promise<void> {\n    const num = this.textSizeNumberToPercentage(options.value);\n    this.setRaw(num);\n  }\n\n  getRaw(): string {\n    if (typeof document !== 'undefined') {\n      return document.body.style.webkitTextSizeAdjust || '100%';\n    }\n    return '100%';\n  }\n\n  setRaw(value: string): void {\n    if (typeof document !== 'undefined') {\n      document.body.style.webkitTextSizeAdjust = value;\n    }\n  }\n\n  textSizePercentageToNumber(percentage: string): number {\n    const m = TextZoomIOS.TEXT_SIZE_REGEX.exec(percentage);\n\n    if (!m) {\n      return 1;\n    }\n\n    const parsed = Number.parseInt(m[1], 10);\n\n    if (Number.isNaN(parsed)) {\n      return 1;\n    }\n\n    return parsed / 100;\n  }\n\n  textSizeNumberToPercentage(num: number): string {\n    return `${Math.round(num * 100)}%`;\n  }\n}\n"],"names":["TextZoomIOS","_classCallCheck","_createClass","key","value","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","percentage","wrap","_context","prev","next","this","getRaw","textSizePercentageToNumber","abrupt","stop","apply","arguments","_getPreferred","_callee2","_context2","Plugins","TextZoom","getPreferred","_set","_callee3","options","num","_context3","textSizeNumberToPercentage","setRaw","_x","document","body","style","webkitTextSizeAdjust","m","TEXT_SIZE_REGEX","exec","parsed","Number","parseInt","isNaN","concat","Math","round"],"sourceRoot":""}