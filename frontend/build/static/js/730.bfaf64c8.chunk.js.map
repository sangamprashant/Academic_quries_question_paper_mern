{"version":3,"file":"static/js/730.bfaf64c8.chunk.js","mappings":"mJASM,MAAOA,EAGX,SAAMC,GACJ,MAAMC,EAAaC,KAAKC,SAGxB,MAAO,CAAEC,MAFKF,KAAKG,2BAA2BJ,GAGhD,CAEA,kBAAMK,GACJ,OAAOC,EAAAA,GAAQC,SAASF,cAC1B,CAEA,SAAMG,CAAIC,GACR,MAAMC,EAAMT,KAAKU,2BAA2BF,EAAQN,OACpDF,KAAKW,OAAOF,EACd,CAEAR,MAAAA,GACE,MAAwB,qBAAbW,UACFA,SAASC,KAAKC,MAAMC,sBAEtB,MACT,CAEAJ,MAAAA,CAAOT,GACmB,qBAAbU,WACTA,SAASC,KAAKC,MAAMC,qBAAuBb,EAE/C,CAEAC,0BAAAA,CAA2BJ,GACzB,MAAMiB,EAAInB,EAAYoB,gBAAgBC,KAAKnB,GAE3C,IAAKiB,EACH,OAAO,EAGT,MAAMG,EAASC,OAAOC,SAASL,EAAE,GAAI,IAErC,OAAII,OAAOE,MAAMH,GACR,EAGFA,EAAS,GAClB,CAEAT,0BAAAA,CAA2BD,GACzB,MAAO,GAAPc,OAAUC,KAAKC,MAAY,IAANhB,GAAU,IACjC,EAjDgBZ,EAAAoB,gBAAkB,Q","sources":["../node_modules/@capacitor/text-zoom/src/ios.ts"],"sourcesContent":["import { Plugins } from '@capacitor/core';\n\nimport type {\n  GetPreferredResult,\n  GetResult,\n  SetOptions,\n  TextZoomPlugin,\n} from './definitions';\n\nexport class TextZoomIOS implements TextZoomPlugin {\n  static readonly TEXT_SIZE_REGEX = /(\\d+)%/;\n\n  async get(): Promise<GetResult> {\n    const percentage = this.getRaw();\n    const value = this.textSizePercentageToNumber(percentage);\n\n    return { value };\n  }\n\n  async getPreferred(): Promise<GetPreferredResult> {\n    return Plugins.TextZoom.getPreferred();\n  }\n\n  async set(options: SetOptions): Promise<void> {\n    const num = this.textSizeNumberToPercentage(options.value);\n    this.setRaw(num);\n  }\n\n  getRaw(): string {\n    if (typeof document !== 'undefined') {\n      return document.body.style.webkitTextSizeAdjust || '100%';\n    }\n    return '100%';\n  }\n\n  setRaw(value: string): void {\n    if (typeof document !== 'undefined') {\n      document.body.style.webkitTextSizeAdjust = value;\n    }\n  }\n\n  textSizePercentageToNumber(percentage: string): number {\n    const m = TextZoomIOS.TEXT_SIZE_REGEX.exec(percentage);\n\n    if (!m) {\n      return 1;\n    }\n\n    const parsed = Number.parseInt(m[1], 10);\n\n    if (Number.isNaN(parsed)) {\n      return 1;\n    }\n\n    return parsed / 100;\n  }\n\n  textSizeNumberToPercentage(num: number): string {\n    return `${Math.round(num * 100)}%`;\n  }\n}\n"],"names":["TextZoomIOS","get","percentage","this","getRaw","value","textSizePercentageToNumber","getPreferred","Plugins","TextZoom","set","options","num","textSizeNumberToPercentage","setRaw","document","body","style","webkitTextSizeAdjust","m","TEXT_SIZE_REGEX","exec","parsed","Number","parseInt","isNaN","concat","Math","round"],"sourceRoot":""}